#!/bin/bash
set -eo pipefail

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚ñ∂ Triggering ECS Deploy Script               "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚ñ∂ Installing AWS CLI for ARM Architecture    "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""

# Remove conflicting curl-minimal first
yum remove -y curl-minimal >/dev/null 2>&1 || true

# Install required packages
yum install -y unzip git >/dev/null

# Install curl if not already present
if ! command -v curl &> /dev/null; then
    yum install -y curl >/dev/null
fi

rm -rf aws awscliv2 awscliv2.zip /usr/local/aws-cli

# Use ARM version of AWS CLI (linux-aarch64.zip instead of linux-x86_64.zip)
curl -s "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
unzip -qq awscliv2.zip
./aws/install --bin-dir /usr/bin --install-dir /usr/local/aws-cli --update

export PATH="/usr/local/aws-cli/v2/current/bin:$PATH"

aws --version || { echo "‚ùå AWS CLI not installed correctly"; exit 1; }

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚ñ∂ Setting up Composer Auth                   "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""

mkdir -p ~/.composer
cp -f miscellaneous/conf/composer/auth.json ~/.composer/auth.json

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚ñ∂ Setting up SSH Config                      "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""

mkdir -p ~/.ssh
cp -f miscellaneous/conf/ssh/config ~/.ssh/config
chmod 600 ~/.ssh/config

# ENVIRONMENT VARIABLES
AWS_REGION="${AWS_DEFAULT_REGION:-ap-south-1}"
ECS_CLUSTER="${ECS_CLUSTER:-demo-bridge}"  # Changed from siscol-cluster to demo-bridge
ECS_SERVICE="${ECS_SERVICE:-Bridge-service}"  # Changed from siscol-task-service-gtliq1oh to Bridge-service

: "${AWS_ACCOUNT_ID:?‚ùå AWS_ACCOUNT_ID not set}"
: "${ECR_REPOSITORY:?‚ùå ECR_REPOSITORY not set}"
: "${BITBUCKET_COMMIT:?‚ùå BITBUCKET_COMMIT not set}"

IMAGE_TAG="$BITBUCKET_BUILD_NUMBER"
IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG"

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚ñ∂ Checking ECS Service Status                "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""

SERVICE_STATUS=$(aws ecs describe-services \
  --cluster "$ECS_CLUSTER" \
  --services "$ECS_SERVICE" \
  --region "$AWS_REGION" \
  --query 'services[0].status' \
  --output text)

if [[ "$SERVICE_STATUS" != "ACTIVE" ]]; then
  echo "‚ùå ECS service '$ECS_SERVICE' is not ACTIVE (current status: $SERVICE_STATUS). Aborting deployment."
  exit 1
fi

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚ñ∂ Updating ECS Service with New Image        "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""

echo "üöÄ New Image: $IMAGE_URI"
 
aws ecs update-service \
  --cluster "$ECS_CLUSTER" \
  --service "$ECS_SERVICE" \
  --force-new-deployment \
  --region "$AWS_REGION"

echo ""
echo ""
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo "‚úÖ ECS Deployment Triggered Successfully     "
echo ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
echo ""
echo ""