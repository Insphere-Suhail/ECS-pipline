# HTTP-level settings
limit_req_zone $binary_remote_addr zone=limit:10m rate=10r/s;

# HSTS mapping for HTTPS-only
map $scheme $strict_transport_security {
    https "max-age=63072000; includeSubDomains; preload";
    default "";
}

map $http_origin $cors_origin {
  default "";
  "~^https://(main\.d2qbvajm6qahy4\.amplifyapp\.com|{{ frontend_domain }}\.co\.in|www\.{{ project_name }}\.co\.in|localhost:3000)$" $http_origin;
}


server {
    listen 80 default_server;
    server_name {{ frontend_domain }};

    include /etc/nginx/default.d/headers.conf;

    include /etc/nginx/default.d/waf_rules.conf;

    include /etc/nginx/default.d/handle_errors.conf;

    root /var/www/{{ project_name }}/frontend/web;
    index index.php health-check.php;

    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    
    # location = /health {
    #     access_log off;
    #     error_log off;
        
    #     # Allow AWS internal health checkers
    #     allow 172.16.0.0/12;   # Entire RFC1918 private range (covers 172.16.0.0 - 172.31.255.255)
    #     allow 10.0.0.0/8;      # Common AWS VPC CIDR
    #     allow 192.168.0.0/16;  # Other common private ranges
    #     deny all;

    #     # Fast health check processing
    #     include fastcgi_params;
    #     fastcgi_pass unix:/var/run/php/www.sock;
    #     fastcgi_param SCRIPT_FILENAME $document_root/index.php;
    #     fastcgi_param PATH_INFO /health;
    #     fastcgi_read_timeout 2s;       # Fail fast
    #     fastcgi_send_timeout 2s;        # Fail fast
    # }


    location / {
        
        limit_req zone=limit burst=80;
        limit_except GET POST OPTIONS{
            deny all;
        }

        # Handle preflight (OPTIONS)
        if ($request_method = OPTIONS ) {
            include /etc/nginx/default.d/cors.conf;

            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # CORS headers
        include /etc/nginx/default.d/cors.conf;

        try_files $uri $uri/ /index.php?$query_string;
    }

    # Common location blocks
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(env|ini|log|conf|bak|sql|svn|git|gitignore|htaccess|htpasswd)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location ^~ /captcha/ {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        expires off;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param HTTP_HOST $host;
        fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param REMOTE_ADDR $remote_addr; 

    }

    location ~ /\.ht {
        deny all;
    }
 
}


server {
    listen 80;
    server_name {{ api_domain }};

    include /etc/nginx/default.d/headers.conf;

    include /etc/nginx/default.d/waf_rules.conf;

    include /etc/nginx/default.d/handle_errors.conf;

    root /var/www/{{ project_name }}/api/web;
    index index.php;

    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }


    location / {
        
        limit_req zone=limit burst=20;
        limit_except GET POST OPTIONS{
            deny all;
        }

        # Handle preflight (OPTIONS)
        if ($request_method = OPTIONS ) {
            # Include CORS configuration
            include /etc/nginx/default.d/cors.conf;
            
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # CORS headers
        include /etc/nginx/default.d/cors.conf;

        try_files $uri $uri/ /index.php?$query_string;
    }

    # Common location blocks
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(env|ini|log|conf|bak|sql|svn|git|gitignore|htaccess|htpasswd)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param HTTP_HOST $host;
        fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param REMOTE_ADDR $remote_addr;
    }

    location ~ /\.ht {
        deny all;
    }
}
