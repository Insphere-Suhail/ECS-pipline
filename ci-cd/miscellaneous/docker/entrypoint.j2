#!/bin/bash
set -e

PROJECT_DIR="/var/www/{{ project_name }}"
PROJECT_BACKUP_DIR="/var/www/{{ project_name }}_old"

echo "Creating PHP-FPM socket directory..."
mkdir -p /run/php-fpm
chown -R nginx:nginx /run/php-fpm
chmod 755 /run/php-fpm

# Restore vendor if missing
if [ ! -d "$PROJECT_DIR/vendor" ] && [ -d "$PROJECT_BACKUP_DIR/vendor" ]; then
    echo "Restoring vendor directory from backup..."
    rsync -azqp "$PROJECT_BACKUP_DIR/vendor/" "$PROJECT_DIR/vendor/"
fi

# Ensure composer exists
if ! command -v composer >/dev/null 2>&1; then
    echo "❌ Composer not found."
    exit 1
fi

# Download config from S3 (only if AWS CLI is available)
if command -v aws >/dev/null 2>&1; then
    echo "Downloading configuration from S3..."
    aws s3 cp {{ s3_bucket }}/Config/ "$PROJECT_DIR" --recursive || echo "⚠️ Failed to fetch S3 config"
else
    echo "⚠️ AWS CLI not found, skipping S3 config download"
fi

# Start PHP-FPM
echo "Launching PHP-FPM..."
php-fpm --daemonize
sleep 2

# Verify PHP-FPM
if [ -S /run/php-fpm/www.sock ]; then
    echo "Success: PHP-FPM running"
else
    echo "Error: PHP-FPM failed to start"
    php-fpm --test
    exit 1
fi


# RDS connection details (export these in your CI/CD or Docker ENV)
eval $(php -r '
$config = include "/var/www/{{ project_name }}/common/config/main-local.php";
$dsn = $config["components"]["db"]["dsn"];
preg_match("/host=([^;]+)/", $dsn, $host);
preg_match("/dbname=([^;]+)/", $dsn, $db);
echo "export RDS_HOST={$host[1]}\n";
echo "export RDS_DB={$db[1]}\n";
echo "export RDS_USER={$config["components"]["db"]["username"]}\n";
echo "export RDS_PASS={$config["components"]["db"]["password"]}\n";
echo "export RDS_PORT=3306\n";
')

MAX_RETRIES=3
COUNT=0

echo "Checking MySQL RDS connection to $RDS_HOST:$RDS_PORT ..."

until mysql -h"$RDS_HOST" -P"$RDS_PORT" -u"$RDS_USER" -p"$RDS_PASS" -e "USE $RDS_DB;" >/dev/null 2>&1; do
    COUNT=$((COUNT+1))
    echo "Waiting for RDS MySQL... ($COUNT/$MAX_RETRIES)"
    if [ "$COUNT" -ge "$MAX_RETRIES" ]; then
        echo "Error: Unable to connect to RDS MySQL at $RDS_HOST after $MAX_RETRIES attempts."
        exit 1
    fi
    sleep 5
done

echo "Success: Connected to RDS MySQL and database $RDS_DB exists."



# Run migrations
echo "Running database migrations..."
cd "$PROJECT_DIR"
php yii migrate --interactive=0 || {
    echo "Error: Migration failed!"
    exit 1
}

echo "Success: Database migrations completed."

###################################################################################################################
# Start PHP-FPM in daemon mode and launch NGINX in foreground
###################################################################################################################

echo "Starting Nginx..."
exec nginx -g 'daemon off;'